/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
    tenants: TenantAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    products: Product;
    tenants: Tenant;
    carts: Cart;
    orders: Order;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      subcategories: 'categories';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    carts: CartsSelect<false> | CartsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Tenant & {
        collection: 'tenants';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface TenantAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  username: string;
  /**
   * User saved addresses
   */
  addresses?:
    | {
        fullName: string;
        addressLine1: string;
        addressLine2?: string | null;
        city: string;
        state: string;
        pinCode: string;
        phone: string;
        /**
         * Make this the default address
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  roles?: ('user' | 'super-admin')[] | null;
  tenants?:
    | {
        tenant: string | Tenant;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  /**
   * This is the name of your store, it will be used in the store
   */
  tenantname: string;
  /**
   * This is the unique identifier for your store, it will be used in the URL
   */
  slug: string;
  image?: (string | null) | Media;
  /**
   * please provide your Razorpay API key
   */
  razorpay?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  slug: string;
  color?: string | null;
  description?: string | null;
  parent?: (string | null) | Category;
  subcategories?: {
    docs?: (string | Category)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  description?: string | null;
  hasVariants?: boolean | null;
  /**
   * Base price for the product (only if no variants)
   */
  price?: number | null;
  /**
   * Add different variants of this product (e.g. sizes, weights)
   */
  variants?:
    | {
        /**
         * E.g. '500g', '1kg', 'Small', 'Medium', etc.
         */
        name: string;
        price: number;
        sku?: string | null;
        stock?: number | null;
        id?: string | null;
      }[]
    | null;
  category: string | Category;
  /**
   * Main product image
   */
  image?: (string | null) | Media;
  /**
   * This image will be shown when the user hovers over the product
   */
  hoverImage?: (string | null) | Media;
  /**
   * Add multiple product images (optional)
   */
  additionalImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  refundPolicy?: ('30 days' | '14 days' | '7 days' | 'No refund') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: string;
  userId: string;
  items: {
    product: string | Product;
    quantity: number;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  tenants?:
    | {
        tenant: string | Tenant;
        id?: string | null;
      }[]
    | null;
  /**
   * Unique order identifier
   */
  orderNumber: string;
  /**
   * User who placed the order
   */
  user: string | User;
  /**
   * Current status of the order
   */
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled';
  /**
   * Products in this order
   */
  items: {
    product: string | Product;
    /**
     * Number of units ordered
     */
    quantity: number;
    /**
     * Name of the product variant (if applicable)
     */
    variantName?: string | null;
    /**
     * Price at time of purchase (in rupees)
     */
    price: number;
    id?: string | null;
  }[];
  /**
   * Order subtotal before tax and shipping
   */
  subtotal: number;
  /**
   * Tax amount for this order
   */
  tax: number;
  /**
   * Shipping cost for this order
   */
  shippingCost: number;
  /**
   * Total order amount including tax and shipping
   */
  total: number;
  /**
   * Customer contact information
   */
  customerInfo: {
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
    company?: string | null;
  };
  /**
   * Address to ship the order to
   */
  shippingAddress: {
    address: string;
    apartment?: string | null;
    city: string;
    state: string;
    pinCode: string;
  };
  /**
   * Address for billing purposes
   */
  billingAddress: {
    sameAsShipping?: boolean | null;
    address?: string | null;
    apartment?: string | null;
    city?: string | null;
    state?: string | null;
    pinCode?: string | null;
  };
  /**
   * Payment information
   */
  paymentInfo: {
    method: 'cod' | 'credit' | 'upi' | 'netbanking';
    /**
     * Transaction ID for online payments
     */
    transactionId?: string | null;
    status: 'pending' | 'completed' | 'failed' | 'refunded';
  };
  /**
   * Order notes or special instructions
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'carts';
        value: string | Cart;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'tenants';
        value: string | Tenant;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'tenants';
        value: string | Tenant;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  username?: T;
  addresses?:
    | T
    | {
        fullName?: T;
        addressLine1?: T;
        addressLine2?: T;
        city?: T;
        state?: T;
        pinCode?: T;
        phone?: T;
        isDefault?: T;
        id?: T;
      };
  roles?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  color?: T;
  description?: T;
  parent?: T;
  subcategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  hasVariants?: T;
  price?: T;
  variants?:
    | T
    | {
        name?: T;
        price?: T;
        sku?: T;
        stock?: T;
        id?: T;
      };
  category?: T;
  image?: T;
  hoverImage?: T;
  additionalImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  refundPolicy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  tenantname?: T;
  slug?: T;
  image?: T;
  razorpay?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts_select".
 */
export interface CartsSelect<T extends boolean = true> {
  userId?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  tenants?:
    | T
    | {
        tenant?: T;
        id?: T;
      };
  orderNumber?: T;
  user?: T;
  status?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        variantName?: T;
        price?: T;
        id?: T;
      };
  subtotal?: T;
  tax?: T;
  shippingCost?: T;
  total?: T;
  customerInfo?:
    | T
    | {
        firstName?: T;
        lastName?: T;
        email?: T;
        phone?: T;
        company?: T;
      };
  shippingAddress?:
    | T
    | {
        address?: T;
        apartment?: T;
        city?: T;
        state?: T;
        pinCode?: T;
      };
  billingAddress?:
    | T
    | {
        sameAsShipping?: T;
        address?: T;
        apartment?: T;
        city?: T;
        state?: T;
        pinCode?: T;
      };
  paymentInfo?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}